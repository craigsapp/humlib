@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	HumHash
@METHOD:	isDefined
@ACCESS:	public
@RETURN:	bool           
@RETURN:	bool           
@RETURN:	bool           
@PARAMETERS:	const string& key
@PARAMETERS:	const string& ns2, const string& key
@PARAMETERS:	const string& ns1, const string& ns2, const string& key
@QUALIFIER:	const
@QUALIFIER:	const
@QUALIFIER:	const
@FILE:		HumHash.cpp
@LINES:		833-855
@SHORTDESC:	Returns true if the given parameter exists in the map.
@LONGDESC:	Returns true if the given parameter exists in the
	map.   Format of the input string:   NS1:NS2:key or "":NS2:key for the
	two argument version of the function.  OR "":"":key if no colons in
	single string argument version.
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

bool HumHash::isDefined(const string& key) const {
	if (parameters == NULL) {
		return false;
	}
	vector<string> keys = getKeyList(key);
	if (keys.size() == 1) {
		return (*parameters)[""][""].count(keys[0]);
	} else if (keys.size() == 2) {
		return (*parameters)[""][keys[0]].count(keys[1]);
	} else {
		return (*parameters)[keys[0]][keys[1]].count(keys[2]);
	}
}


@@END:	FunctionDocumentation

