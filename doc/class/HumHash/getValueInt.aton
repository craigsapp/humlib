@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	HumHash
@METHOD:	getValueInt
@ACCESS:	public
@RETURN:	int            
@RETURN:	int            
@RETURN:	int            
@PARAMETERS:	const string& key
@PARAMETERS:	const string& ns2, const string& key
@PARAMETERS:	const string& ns1, const string& ns2, const string& key
@QUALIFIER:	const
@QUALIFIER:	const
@QUALIFIER:	const
@FILE:		HumHash.cpp
@LINES:		220-245
@SHORTDESC:	Return the value as an integer.
@LONGDESC:	Return the value as an integer.  The value must
	start with a number and have no text before it; otherwise the
	returned value will be "0".  The HumHash class is aware of fractional
	values, so the integer form of the fraction will be returned.  For
	example if the value is "12/7", then the return value will be "1"
	since the integer part of 12/7 is 1 with a remainder of 5/7ths
	which will be chopped off.
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

int HumHash::getValueInt(const string& key) const {
	if (parameters == NULL) {
		return 0;
	}
	vector<string> keys = getKeyList(key);
	if (keys.size() == 1) {
		return getValueInt("", "", keys[2]);
	} else if (keys.size() == 2) {
		return getValueInt(keys[0], keys[1]);
	} else {
		return getValueInt(keys[0], keys[1], keys[2]);
	}
}


@@END:	FunctionDocumentation

