@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	HumHash
@METHOD:	hasParameters
@ACCESS:	public
@RETURN:	bool           
@RETURN:	bool           
@RETURN:	bool           
@PARAMETERS:	void
@PARAMETERS:	const string& ns
@PARAMETERS:	const string& ns1, const string& ns2
@QUALIFIER:	const
@QUALIFIER:	const
@QUALIFIER:	const
@FILE:		HumHash.cpp
@LINES:		691-720
@SHORTDESC:	Returns true if at least one parameter is defined in the HumHash object (when no arguments are given to the function).
@LONGDESC:	Returns true if at least one parameter is defined
	in the HumHash object (when no arguments are given to the function).
	When two strings are given as arguments, the function checks to see if
	the given namespace pair has any keys.  If only one string argument,
	then check if the given NS1 has any parameters, unless there is a
	colon in the string which means to check NS1:NS2.
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

bool HumHash::hasParameters(const string& ns1, const string& ns2) const {
	if (parameters == NULL) {
		return false;
	}
	if (parameters->size() == 0) {
		return false;
	}
	auto it1 = parameters->find(ns1);
	if (it1 == parameters->end()) {
		return false;
	}
	auto it2 = (*parameters)[ns1].find(ns2);
	if (it2 == (*parameters)[ns1].end()) {
		return false;
	} else {
		return true;
	}
}


@@END:	FunctionDocumentation

