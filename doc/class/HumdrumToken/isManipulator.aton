@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	HumdrumToken
@METHOD:	isManipulator
@ACCESS:	public
@RETURN:	bool     
@PARAMETERS:	void
@FILE:		HumdrumToken.cpp
@LINES:		452-473
@SHORTDESC:	Returns true if token is one of: SPLIT_TOKEN = "*^" == spine splitter MERGE_TOKEN = "*v" == spine merger EXCHANGE_TOKEN = "*x" == spine exchanger ADD_TOKEN = "*+" == spine adder TERMINATE_TOKEN = "*-" == spine terminator **... == exclusive interpretation 
@LONGDESC:	Returns true if token is one of:
	SPLIT_TOKEN     = "*^"  == spine splitter
	MERGE_TOKEN     = "*v"  == spine merger
	EXCHANGE_TOKEN  = "*x"  == spine exchanger
	ADD_TOKEN       = "*+"  == spine adder
	TERMINATE_TOKEN = "*-"  == spine terminator
	**...  == exclusive interpretation
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

bool HumdrumToken::isManipulator(void) const {
	if (isSplitInterpretation())     { return true; }
	if (isMergeInterpretation())     { return true; }
	if (isExchangeInterpretation())  { return true; }
	if (isAddInterpretation())       { return true; }
	if (isTerminateInterpretation()) { return true; }
	if (isExclusiveInterpretation()) { return true; }
	return false;
}


@@END:	FunctionDocumentation

