@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	Convert
@METHOD:	kernToOctaveNumber
@ACCESS:	public
@RETURN:	static int     
@PARAMETERS:	const string& kerndata
@FILE:		Convert-pitch.cpp
@LINES:		164-201
@SEEALSO:
@SHORTDESC:	Convert a kern token into an octave number.
@LONGDESC:	Convert a kern token into an octave number.
	Middle C is the start of the 4th octave. -1000 is returned if there
	is not pitch in the string.  Only the first subtoken in the string is
	considered.
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:
//////////////////////////////
//
// Convert::kernToOctaveNumber -- Convert a kern token into an octave number.
//    Middle C is the start of the 4th octave. -1000 is returned if there
//    is not pitch in the string.  Only the first subtoken in the string is
//    considered.
//

int Convert::kernToOctaveNumber(const string& kerndata) {
	int uc = 0;
	int lc = 0;
	if (kerndata == ".") {
		return -1000;
	}
	for (int i=0; i<kerndata.size(); i++) {
		if (kerndata[i] == ' ') {
			break;
		}
		if (kerndata[i] == 'r') {
			return -1000;
		}
		uc += ('A' <= kerndata[i]) && (kerndata[i] <= 'G') ? 1 : 0;
		lc += ('a' <= kerndata[i]) && (kerndata[i] <= 'g') ? 1 : 0;
	}
	if ((uc > 0) && (lc > 0)) {
		// invalid pitch description
		return -1000;
	}
	if (uc > 0) {
		return 4 - uc;
	} else if (lc > 0) {
		return 3 + lc;
	} else {
		return -1000;
	}
}




@@END:	FunctionDocumentation

