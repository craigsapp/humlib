@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	Convert
@METHOD:	getKernPitchAttributes
@ACCESS:	public
@RETURN:	static string  
@PARAMETERS:	const string& kerndata
@FILE:		Convert-kern.cpp
@LINES:		206-245
@SHORTDESC:	// Convert::getKernPitchAttributes -- pc = pitch class numacc = numeric accidental (-1=flat, 0=natural, 1=sharp) explicit = force showing of accidental oct = octave number (middle C = 4) base40 = base-40 enumeration of pitch (valid if abs(numacc) <= 2) 
@LONGDESC:	// Convert::getKernPitchAttributes --
	pc         = pitch class
	numacc     = numeric accidental (-1=flat, 0=natural, 1=sharp)
	explicit   = force showing of accidental
	oct        = octave number (middle C = 4)
	base40     = base-40 enumeration of pitch (valid if abs(numacc) <= 2)
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:

string Convert::getKernPitchAttributes(const string& kerndata) {
	int accid = kernToAccidentalCount(kerndata);
	string output = "";

	output += " dpc=\"";
	output += kernToDiatonicUC(kerndata);
	output += "\"";

	output += " numacc=\"";
	output += to_string(accid);
	output += "\"";

	if (kerndata.find('n') != string::npos) {
		output += " explicit =\"true\"";
	}

	output += " oct=\"";
	output += to_string(kernToOctaveNumber(kerndata));
	output += "\"";

	if (abs(accid) <= 2) {
		output += " base40=\"";
		output += to_string(kernToBase40(kerndata));
		output += "\"";
	}

	return output;
}


@@END:	FunctionDocumentation

