@@BEGIN:	FunctionDocumentation
@INDEXED:	yes
@CLASSNAME:	HumdrumToken
@METHOD:	getSubtoken
@ACCESS:	public
@RETURN:	string   
@PARAMETERS:	int index, const string& separator
@FILE:		HumdrumToken.cpp
@LINES:		729-758
@SEEALSO:
@SHORTDESC:	Extract the specified subtoken from the token.
@LONGDESC:	Extract the specified subtoken from the token.
	Tokens usually are separated by spaces in Humdrum files, but this will 
	depened on the data type (so therefore, the tokens are not presplit into
	sub-tokens when reading in the file).
	default value: separator = " "
	

@@BEGIN: EXAMPLE
@DESCRIPTION:
@CODE:
@OUTPUT:
@@END:	EXAMPLE

@SRCCODE:
/////////////////////////////
//
// HumdrumToken::getSubtoken -- Extract the specified subtoken from the token.
//    Tokens usually are separated by spaces in Humdrum files, but this will 
//    depened on the data type (so therefore, the tokens are not presplit into
//    sub-tokens when reading in the file).
//        default value: separator = " "
//

string HumdrumToken::getSubtoken(int index, const string& separator) const {
	if (index < 0) {
		return "";
	}
	int count = 0;
	int start = 0;
	int end   = 0;
	while ((end = string::find(separator, start)) != string::npos) {
		count++;
		if (count == index) {
			return string::substr(start, end-start);
		}
		start += separator.size();
	}
	if (count == index) {
		return string::substr(start, string::size()-start);
	}
	return "";
}




@@END:	FunctionDocumentation

