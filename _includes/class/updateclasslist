#!/usr/bin/perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Fri Feb 20 13:21:57 PST 2015
# Last Modified: Fri Feb 20 13:21:57 PST 2015
# Filename:      /tmp/midifile/_includes/class/updateclasslist
# Syntax:        perl 5
#
# Description:
#

use strict;

my $classdir = "../../doc/class";
my @contents = <>;
my $i;

for ($i=0; $i<@contents; $i++) {
   my $line = $contents[$i];
   chomp $line;
   if ($line =~ /START_DOCLIST\(([^\)]+)\)/) {
      print "$line\n";
      my $class = $1;
      printClassListContents($class);
      $line = $contents[++$i];
      while ($line !~ /END_DOCLIST/) {
         # careful of a possible infinite loop here.
         $line = $contents[++$i];
      }
      print "$line\n";
   } elsif ($line =~ /<h2>.*href="([^"]+).*h2subtitle/) {
      # <h2> <a href="HumdrumToken">HumdrumToken</a>:: <span class="h2subtitle">
      # Manages data tokens for a HumdrumLine.
      # </span></h2>
      my $class = $1;
      my $description = `cat ../../doc/class/$class/.description`;
      chomp $description;
      print "$line\n";
      print "$description\n";
      $i++;
   } else {
      print "$line\n";
   }
}


##############################
##
## printClassListContents --
##
## ../../class/MidiFile/absoluteTime.aton:@INDEXED:	yes
##

sub printClassListContents {
   my ($classname) = @_;
   my $list = `grep INDEXED.*yes ../../doc/class/$classname/*.aton`;
   my @items = split(/\n/, $list);
   my $i;
   my $item;
   for ($i=0; $i<@items; $i++) {
      $item = $items[$i];
      $item =~ s/.*\///;
      $item =~ s/\.aton.*//;
      $item =~ s/SQUAREBRACKETS/[]/g;
      $item =~ s/BRACKET/[]/g;
      $item =~ s/SLASH/\//g;
      $item =~ s/LESS/</g;
      $item =~ s/GREAT/>/g;
      $item =~ s/BANG/!/g;
      $item =~ s/PLUS/+/g;
      $item =~ s/STAR/*/g;
      $item =~ s/DASH/-/g;
      $item =~ s/TILDE/~/g;
      $item =~ s/EQUALS/=/g;
      $item =~ s/EQUAL/=/g;
      print "\t'$item'";
      if ($i < $#items) {
         print ",\n";
      } else {
         print "\n";
      }
   }
}

